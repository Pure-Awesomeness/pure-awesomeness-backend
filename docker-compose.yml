# docker-compose.yml 
version: '3.1'

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${LOCALTIME}:/etc/localtime:ro
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
      - ${VOLUME}/portainer-data:/data
    ports:
      - ${PORTAINER_PORT}:9000

  jenkins:
    image: jenkins/jenkins:lts-slim@sha256:f23cee966c1e85a5dc3b4bfa644df12eae3c5dda9c0fd07b2f8eed6f624a0013
    container_name: jenkins
    restart: unless-stopped
    privileged: true
    user: root
    volumes:
      - ${LOCALTIME}:/etc/localtime:ro
      - ${VOLUME}/jenkins_configuration:/var/jenkins_home
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
    ports:
      - ${JENKINS_PORT}:8080
      - 50000:50000

  backend:
    image: tapankumar/pure-awesomeness-backend:latest
    container_name: backend
    depends_on:
      - portainer
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - ${APP_PORT}:8080
    networks:
      - backend-network

  postgres:
    image: postgres
    profiles:
      - donotstart
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:5432
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge